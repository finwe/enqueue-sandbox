imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  'UTF8'
        server_version: 5.7
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

enqueue:
    transport:
        default: 'amqp'
        amqp:
            host: '%rabbitmq_host%'
            port: '%rabbitmq_port%'
            login: '%rabbitmq_user%'
            password: '%rabbitmq_password%'
            vhost: '%rabbitmq_vhost%'
    client:
        prefix: 'mqs'
        app_name: 'enqueue'
        router_topic: 'router'
        router_queue: 'router'
        default_processor_queue: 'default'

fos_elastica:
    clients:
        default: { host: %elasticsearch_host%, port: %elasticsearch_port% }
    indexes:
        app:
            index_name: app_%kernel.environment%
            types:
                blog:
                    mappings:
                        text: ~
                    persistence:
                        driver: orm
                        model: AppBundle\Entity\Blog
                        provider: ~
                        listener: ~
                        finder: ~

knp_gaufrette:
    adapters:
        image:
            local: { directory: '%kernel.root_dir%/../var/images' }

    filesystems:
        image:
            adapter: 'image'

    stream_wrapper:
        protocol: 'gaufrette'
        filesystems: ['image']

liip_imagine:
    enqueue: true
    loaders:
        default:
            stream: { wrapper: 'gaufrette://image/' }

    resolvers:
        web_path:
            web_path: ~

    driver: 'imagick'

    filter_sets:
        thumbnail_223x223:
            cache: default
            data_loader: default
            filters:
                thumbnail: { size: [223, 223], mode: inset }

        thumbnail_23x23:
            cache: default
            data_loader: default
            filters:
                thumbnail: { size: [223, 223], mode: inset }

        thumbnail_100x100:
            cache: default
            data_loader: default
            filters:
                thumbnail: { size: [223, 223], mode: inset }

old_sound_rabbit_mq:
    connections:
        default:
            host: '%rabbitmq_host%'
            port: '%rabbitmq_port%'
            user: '%rabbitmq_user%'
            password: '%rabbitmq_password%'
            vhost: '%rabbitmq_vhost%'
            lazy: true
    producers:
        upload_picture:
            connection:       default
            exchange_options: {name: 'upload-picture', type: direct}
            service_alias:    my_app_service # no alias by default
    consumers:
        upload_picture:
            connection:       default
            exchange_options: {name: 'upload-picture', type: direct}
            queue_options:    {name: 'upload-picture'}
            callback:         upload_picture_service

services:
  app.async.say_hello_processor:
    class: 'AppBundle\Async\SayHelloProcessor'
    tags:
        - { name: 'enqueue.client.processor' }

  app.async.upload_picture_processor:
    class: 'AppBundle\Async\UploadPictureProcessor'
    tags:
        - { name: 'enqueue.client.processor' }

  upload_picture_service:
      class: 'AppBundle\Consumer\UploadPictureConsumer'